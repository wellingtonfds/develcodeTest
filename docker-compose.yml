version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-develcode
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: develcode
      MYSQL_ALLOW_PUBLIC_KEY_RETRIEVAL: 'true'
    volumes:
      - /mysql-develcode:/var/lib/mysql
    ports:
      - "3306:3306"
  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  mongo:
    image: prismagraphql/mongo-single-replica:5.0.3
    ports:
      - '27017:27017'
    environment:
        MONGO_INITDB_DATABASE: paymentDB
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: prisma
  payment_services:
    build:
      context: ./payment
      dockerfile: Dockerfile
    container_name: payment_service
    restart: always
    image: payment_service:v1.0.0
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mongo
